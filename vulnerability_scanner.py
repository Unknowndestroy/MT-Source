#!/usr/bin/env python3
# vulnerability_scanner.py 

import argparse
import subprocess
import requests

def run_nikto(target):
    print(f"[+] Nikto taramasına başlıyorum: {target}")
    try:
        subprocess.run(["nikto", "-h", target], check=True)
    except Exception as e:
        print(f"[!] Nikto çalıştırılamadı amk: {e}")

def run_nuclei(target, templates):
    print(f"[+] Nuclei taramasına başlıyorum: {target} (templates: {templates})")
    try:
        subprocess.run(["nuclei", "-u", target, "-t", templates], check=True)
    except Exception as e:
        print(f"[!] Nuclei çalıştırılamadı amk: {e}")

def check_trace(target):
    print(f"[+] HTTP TRACE methodunu deniyorum: {target}")
    try:
        r = requests.request("TRACE", target, timeout=5, verify=False)
        if r.status_code == 200:
            print("[!] TRACE aktif, XST açığı olabilir!")
        else:
            print("[-] TRACE kapalı, sorun yok gibi.")
    except Exception as e:
        print(f"[!] TRACE kontrolü başarısız amk: {e}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Basit Vulnerability Scanner – Hacker Tool")
    parser.add_argument("url", help="Hedef URL (http://domain.com)")
    parser.add_argument("-t", "--templates", default="~/.nuclei-templates", help="Nuclei template dizini")
    args = parser.parse_args()

    target = args.url
    templates = args.templates

    # 1) Nikto
    run_nikto(target)

    # 2) Nuclei 
    run_nuclei(target, templates)

    # 3) Basit TRACE
    check_trace(target)
